https://wiki.imooc.com/   学习工具字典库

1.验证配置是否正确，可以按照以下地址测试一下    文件格式一般使用  spring.application.name-dev/prod/test.yml
        http://localhost:8000/order-dev.yml
        /{label}/{name}-{profiles}.yml
        /{name}-{profiles}.yml
        label     分支   不写的话默认master分支
        name    服务名
        profiles 环境

2.在yml文件里面配置绑定 每个项目yml文件所属git仓库相关信息    git地址/用户名/密码/本地git仓库存储地址
        spring:
          application:
            name: config
          cloud:
            config:
              server:
                git:
                  uri: https://github.com/jason19839999/config-center.git
                  username: jason19839999
                  password: zsc@19831221
                  basedir: /local-config/basedir

3.

4.比如在配置中心的远程git上面添加了 order.yml 和order-test.yml
        那么获取的时候会把order.yml和order-test.yml合并了，这里需要特别注意！！！
        所以添加配置文件的时候要注意，尽量不要添加order.yml文件，
        或者把项目共用的配置项添加到order.yml里面（比如：redis访问等等），
        这样既实现了统一配置，也不影响其他项目配置。

5.spring cloud bus 自动更新配置    →   消息队列方式
        远端git 调用 /bus-refresh 通知   →    config-server 和 order/product 通过消息队列传递消息
                                                                        RabbitMQ
              手动利用浏览器调用：localhost:8000/bus-refresh   →   config-server   →   order/product

6.引入spring cloud bus  注意：需要同时在config-server和order 项目配置文件里面加如下依赖
            <dependency>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-starter-bus-amqp</artifactId>
             </dependency>

7.@RefreshScope
         注意：在读取配置文件的时候需要在读取的地方加上此注解。

8.使用webhooks 通知config-center
        github:  webhook : localhost:8000/monitor                     →  config-center  →  order/product
                                         content-type:application/json



